<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.chq.o2o.dao.ShopDao">
	<resultMap type="com.chq.o2o.entity.Shop" id="shopMap">
		<id column="shop_id" property="shopId"/>
		<result column="shop_name" property="shopName"/>
		<result column="shop_desc" property="shopDesc"/>
		<result column="shop_addr" property="shopAddr"/>
		<result column="phone" property="phone"/>
		<result column="shop_img" property="shopImg"/>
		<result column="priority" property="priority"/>
		<result column="create_time" property="createTime"/>
		<result column="last_edit_time" property="lastEditTime"/>
		<result column="enable_status" property="enableStatus"/>
		<result column="advice" property="advice"/>
		<!-- 这里的area对象只填充了前端需要显示出来的信息 -->
		<!-- property和javaType指明了Shop中的area成员变量需要被com.chq.o2o.entity.Area对象填充 -->
		<association property="area" column="area_id" javaType="com.chq.o2o.entity.Area">
			<id column="area_id" property="areaId"/>
			<result column="area_name" property="areaName"/>
		</association>
		<association property="shopCategory" column="shop_category" javaType="com.chq.o2o.entity.ShopCategory">
			<id column="shop_category_id" property="shopCategoryId"/>
			<result column="shop_category_name" property="shopCategoryName"/>
		</association>
		<association property="owner" column="user_id" javaType="com.chq.o2o.entity.ShopCategory">
			<id column="user_id" property="userId"/>
			<result column="user_name" property="userName"/>
		</association>
	</resultMap>
	
	<insert id="insertShop" useGeneratedKeys="true" keyColumn="shop_id" keyProperty="shopId">
		INSERT INTO
		tb_shop(owner_id,area_id,shop_category_id,shop_name,shop_desc,shop_addr,phone,shop_img,priority,
			create_time,last_edit_time,enable_status,advice)
		VALUES(#{owner.userId},#{area.areaId},#{shopCategory.shopCategoryId},#{shopName},#{shopDesc},#{shopAddr},#{phone},#{shopImg},#{priority},
			#{createTime},#{lastEditTime},#{enableStatus},#{advice})
	</insert>
	
	<update id="updateShop" parameterType="com.chq.o2o.entity.Shop">
		UPDATE tb_shop
		<set>
			<if test="shopName!=null">shop_name=#{shopName},</if>
			<if test="shopDesc!=null">shop_desc=#{shopDesc},</if>
			<if test="shopAddr!=null">shop_addr=#{shopAddr},</if>
			<if test="phone!=null">phone=#{phone},</if>
			<if test="shopImg!=null">shop_img=#{shopImg},</if>
			<if test="priority!=null">priority=#{priority},</if>
			<if test="lastEditTime!=null">last_edit_time=#{lastEditTime},</if>
			<if test="enableStatus!=null">enable_status=#{enableStatus},</if>
			<if test="advice!=null">advice=#{advice},</if>
			<if test="shopCategory!=null">shop_category_id=#{shopCategory.shopCategoryId},</if>
			<if test="area!=null">area_id=#{area.areaId}</if>
		</set>
		WHERE shop_id=#{shopId}
	</update>
	
	<select id="queryByShopId" parameterType="Long" resultMap="shopMap">
		SELECT 
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		WHERE
		s.area_id = a.area_id
		AND
		s.shop_category_id = sc.shop_category_id
		AND
		s.shop_id = #{shopId}
	</select>
	
	<!-- 虽然这里要返回一个list对象,但是resultMap仍然填shopMap即可,MyBatis检测到结果集中有多个结果时,会自动的将他们装到list中 -->
	<select id="queryShopList" resultMap="shopMap">
		SELECT 
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		sc.shop_category_id,
		sc.shop_category_name
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<!-- 这里加入的是查询条件 -->
			<if test="shopCondition.shopCategory!=null and shopCondition.shopCategory.shopCategoryId!=null">
				shop_condition_id = #{shopCondition.shonCategory.shopCategoryId]}
			</if>
			<if test="shopCondition.area!=null and shopCondition.area.areaId!=null">
				AND shop_area_id = #{shopCondition.area.areaId]}
			</if>
			<if test="shopCondition.shopName!=null">
				AND shop_name like concat('%',#{shopConditon.shopName},'%')
			</if>
			<if test="shopCondition.enableStatus != null">
				AND enable_status = #{shopConditon.enableStatus}
			</if>
			<if test="shopCondition.owner!=null and shopCondition.owner.userId!=null">
				AND owner_id = #{shopCondition.owner.userId}
			</if>
			<!-- 这里是取交集,因为我们shop表中的area_id和shop_category_id必须要存在于tb_area和tb_shop_category表中 -->
			AND s.area_id = a.area_id
			AND s.shop_category_id = sc.shop_category_id
		</where>
		ORDER BY
		s.priority
		DESC
		LIMIT #{rowIndex},#{pageSize}
	</select>
	
	<!-- 获取符合查询条件的结果总数,因为上边的queryShopList中加入了分页,因此无法获取符合条件的查询结果的总数量 -->
	<select id="queryShopCount" resultType="int">
		SELECT
		<!-- count(1)表示统计结果集中第一个字段的数量,这里填1只是为了方便,如果是*的话,就统计所有字段,也可以count(字段名) -->
		count(1)
		FROM
		tb_shop s,
		tb_area a,
		tb_shop_category sc
		<where>
			<!-- 这里加入的是查询条件 -->
			<if test="shopCondition.shopCategory!=null and shopCondition.shopCategory.shopCategoryId!=null">
				s.shop_category_id = #{shopCondition.shopCategory.shopCategoryId}
			</if>
			<if test="shopCondition.area!=null and shopCondition.area.areaId!=null">
				AND s.shop_area_id = #{shopCondition.area.areaId}
			</if>
			<if test="shopCondition.shopName!=null">
				AND s.shop_name like concat('%',#{shopConditon.shopName},'%')
			</if>
			<if test="shopCondition.enableStatus != null">
				AND s.enable_status = #{shopConditon.enableStatus}
			</if>
			<if test="shopCondition.owner!=null and shopCondition.owner.userId!=null">
				AND s.owner_id = #{shopCondition.owner.userId}
			</if>
			<!-- 这里是取交集,因为我们shop表中的area_id和shop_category_id必须要存在于tb_area和tb_shop_category表中 -->
			AND s.area_id = a.area_id
			AND s.shop_category_id = sc.shop_category_id
		</where>
	</select>
</mapper>